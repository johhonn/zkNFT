/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SemaphoreVoting,
  SemaphoreVotingInterface,
} from "../SemaphoreVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "depths",
        type: "uint8[]",
      },
      {
        internalType: "address[]",
        name: "verifierAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "zeroValue",
        type: "uint256",
      },
    ],
    name: "GroupCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
    ],
    name: "NullifierHashAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
    ],
    name: "PollCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decryptionKey",
        type: "uint256",
      },
    ],
    name: "PollEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "encryptionKey",
        type: "uint256",
      },
    ],
    name: "PollStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "vote",
        type: "bytes32",
      },
    ],
    name: "VoteAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
    ],
    name: "addVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vote",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
    ],
    name: "createPoll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decryptionKey",
        type: "uint256",
      },
    ],
    name: "endPoll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getDepth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getNumberOfLeaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "encryptionKey",
        type: "uint256",
      },
    ],
    name: "startPoll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002626380380620026268339818101604052810190620000379190620002ff565b80518251146200007e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000759062000399565b60405180910390fd5b60005b82518160ff1610156200018457818160ff1681518110620000cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160026000858460ff168151811062000114577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160ff1660ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806200017b90620004ca565b91505062000081565b505050620005eb565b6000620001a46200019e84620003e4565b620003bb565b90508083825260208201905082856020860282011115620001c457600080fd5b60005b85811015620001f85781620001dd888262000277565b845260208401935060208301925050600181019050620001c7565b5050509392505050565b600062000219620002138462000413565b620003bb565b905080838252602082019050828560208602820111156200023957600080fd5b60005b858110156200026d5781620002528882620002e8565b8452602084019350602083019250506001810190506200023c565b5050509392505050565b6000815190506200028881620005b7565b92915050565b600082601f830112620002a057600080fd5b8151620002b28482602086016200018d565b91505092915050565b600082601f830112620002cd57600080fd5b8151620002df84826020860162000202565b91505092915050565b600081519050620002f981620005d1565b92915050565b600080604083850312156200031357600080fd5b600083015167ffffffffffffffff8111156200032e57600080fd5b6200033c85828601620002bb565b925050602083015167ffffffffffffffff8111156200035a57600080fd5b62000368858286016200028e565b9150509250929050565b600062000381603f8362000442565b91506200038e8262000568565b604082019050919050565b60006020820190508181036000830152620003b48162000372565b9050919050565b6000620003c7620003da565b9050620003d5828262000494565b919050565b6000604051905090565b600067ffffffffffffffff82111562000402576200040162000528565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000431576200043062000528565b5b602082029050602081019050919050565b600082825260208201905092915050565b6000620004608262000467565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b6200049f8262000557565b810181811067ffffffffffffffff82111715620004c157620004c062000528565b5b80604052505050565b6000620004d78262000487565b915060ff821415620004ee57620004ed620004f9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f53656d6170686f7265566f74696e673a20706172616d6574657273206c69737460008201527f7320646f6573206e6f742068617665207468652073616d65206c656e67746800602082015250565b620005c28162000453565b8114620005ce57600080fd5b50565b620005dc8162000487565b8114620005e857600080fd5b50565b61202b80620005fb6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639b24b3b01161005b5780639b24b3b014610111578063b359dd4314610141578063b9c78c2b1461015d578063bbd8c7db1461018d57610088565b80630a120bb01461008d57806331c1e59d146100a9578063633f439d146100c557806375e618c9146100e1575b600080fd5b6100a760048036038101906100a29190611540565b6101a9565b005b6100c360048036038101906100be91906114f1565b61033a565b005b6100df60048036038101906100da9190611464565b610537565b005b6100fb60048036038101906100f691906114c8565b61084b565b6040516101089190611b3f565b60405180910390f35b61012b600480360381019061012691906114c8565b610878565b6040516101389190611afb565b60405180910390f35b61015b60048036038101906101569190611540565b610898565b005b610177600480360381019061017291906114c8565b610adb565b6040516101849190611afb565b60405180910390f35b6101a760048036038101906101a29190611540565b610afb565b005b816101b2610d3e565b73ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024c90611a3b565b60405180910390fd5b6000600281111561028f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600085815260200190815260200160002060000160149054906101000a900460ff1660028111156102eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461032b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610322906119db565b60405180910390fd5b6103358383610d46565b505050565b600073ffffffffffffffffffffffffffffffffffffffff16600260008360ff1660ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103da906119bb565b60405180910390fd5b6103ef83826000610e5e565b6103f761138a565b82816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050806003600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360028111156104db577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055509050508273ffffffffffffffffffffffffffffffffffffffff167fb447d309fd3b1a27466cdb08ccc02ee5188e9c71fc58af042bafe3e0bb451230856040516105299190611afb565b60405180910390a250505050565b81610540610d3e565b73ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da90611a3b565b60405180910390fd5b6000600360008581526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660028111156106a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028111156106dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152505090506001600281111561071c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81602001516002811115610759577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079090611a1b565b60405180910390fd5b60006107a48561084b565b905060006107b186610878565b90506000600260008460ff1660ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506107ff89838a8a8a86610fcc565b61080888611325565b867f9259c591af3680137739dc2b275c388eb1639a143b49022e7062fa162f14776d8a6040516108389190611940565b60405180910390a2505050505050505050565b60006001600083815260200190815260200160002060000160009054906101000a900460ff169050919050565b600060016000838152602001908152602001600020600101549050919050565b816108a1610d3e565b73ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b90611a3b565b60405180910390fd5b6000600281111561097e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600085815260200190815260200160002060000160149054906101000a900460ff1660028111156109da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1190611a5b565b60405180910390fd5b60016003600085815260200190815260200160002060000160146101000a81548160ff02191690836002811115610a7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610a87610d3e565b73ffffffffffffffffffffffffffffffffffffffff167f426c5e6bd38728569cc4e1f0a309f506d4c1bc56189920d59343af2639b60d3e8484604051610ace929190611b16565b60405180910390a2505050565b600060016000838152602001908152602001600020600201549050919050565b81610b04610d3e565b73ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e90611a3b565b60405180910390fd5b60016002811115610be1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003600085815260200190815260200160002060000160149054906101000a900460ff166002811115610c3d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c749061199b565b60405180910390fd5b60026003600085815260200190815260200160002060000160146101000a81548160ff02191690836002811115610cdd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610cea610d3e565b73ffffffffffffffffffffffffffffffffffffffff167f4a0c303670c99ff9b9eab216bcca4f03007fbece83818599a2946ea62c541fde8484604051610d31929190611b16565b60405180910390a2505050565b600033905090565b6000610d518361084b565b60ff161415610d95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8c906119fb565b60405180910390fd5b6001600083815260200190815260200160002073__$4c0484323457fe1a856f46a4759b553fe4$__63168703fa9091836040518363ffffffff1660e01b8152600401610de2929190611a9b565b60006040518083038186803b158015610dfa57600080fd5b505af4158015610e0e573d6000803e3d6000fd5b505050506000610e1d83610878565b9050827f03fd27265b7dd1f55558bedc22a58fa3b10afb1be776e614bd5a7ba7b94994068383604051610e51929190611b16565b60405180910390a2505050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018310610ec0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb790611a7b565b60405180910390fd5b6000610ecb8461084b565b60ff1614610f0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f059061197b565b60405180910390fd5b6001600084815260200190815260200160002073__$4c0484323457fe1a856f46a4759b553fe4$__63b4bdd117909184846040518463ffffffff1660e01b8152600401610f5d93929190611ac4565b60006040518083038186803b158015610f7557600080fd5b505af4158015610f89573d6000803e3d6000fd5b50505050827fc3082aa494e9088c2c9f0fb62a0b6bd46e6699acb94cfba35be29b95a93f68c88383604051610fbf929190611b5a565b60405180910390a2505050565b60008085815260200190815260200160002060009054906101000a900460ff161561102c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110239061195b565b60405180910390fd5b600061103787611353565b90508173ffffffffffffffffffffffffffffffffffffffff16635fe8c13b60405180604001604052808660006008811061109a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201358152602001866001600881106110de577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201358152506040518060400160405280604051806040016040528089600260088110611136577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581526020018960036008811061117a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581525081526020016040518060400160405280896004600881106111cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020135815260200189600560088110611210577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020135815250815250604051806040016040528088600660088110611260577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201358152602001886007600881106112a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581525060405180608001604052808c81526020018b81526020018781526020018a8152506040518563ffffffff1660e01b81526004016112ec94939291906118f9565b60006040518083038186803b15801561130457600080fd5b505afa158015611318573d6000803e3d6000fd5b5050505050505050505050565b600160008083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600060088260405160200161136891906118de565b6040516020818303038152906040528051906020012060001c901c9050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600060028111156113ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b60008135905061140181611f99565b92915050565b60008190508260206008028201111561141f57600080fd5b92915050565b60008135905061143481611fb0565b92915050565b60008135905061144981611fc7565b92915050565b60008135905061145e81611fde565b92915050565b600080600080610160858703121561147b57600080fd5b600061148987828801611425565b945050602061149a8782880161143a565b93505060406114ab8782880161143a565b92505060606114bc87828801611407565b91505092959194509250565b6000602082840312156114da57600080fd5b60006114e88482850161143a565b91505092915050565b60008060006060848603121561150657600080fd5b60006115148682870161143a565b9350506020611525868287016113f2565b92505060406115368682870161144f565b9150509250925092565b6000806040838503121561155357600080fd5b60006115618582860161143a565b92505060206115728582860161143a565b9150509250929050565b60006115888383611603565b60408301905092915050565b60006115a08383611893565b60208301905092915050565b6115b581611ba1565b6115bf8184611be9565b92506115ca82611b83565b8060005b838110156115fb5781516115e2878261157c565b96506115ed83611bc2565b9250506001810190506115ce565b505050505050565b61160c81611bac565b6116168184611bf4565b925061162182611b8d565b8060005b838110156116525781516116398782611594565b965061164483611bcf565b925050600181019050611625565b505050505050565b61166381611bac565b61166d8184611bff565b925061167882611b8d565b8060005b838110156116a95781516116908782611594565b965061169b83611bcf565b92505060018101905061167c565b505050505050565b6116ba81611bb7565b6116c48184611c0a565b92506116cf82611b97565b8060005b838110156117005781516116e78782611594565b96506116f283611bdc565b9250506001810190506116d3565b505050505050565b61171181611c38565b82525050565b61172861172382611c38565b611c79565b82525050565b600061173b603683611c15565b915061174682611c83565b604082019050919050565b600061175e602583611c15565b915061176982611cd2565b604082019050919050565b6000611781602483611c15565b915061178c82611d21565b604082019050919050565b60006117a4602d83611c15565b91506117af82611d70565b604082019050919050565b60006117c7603783611c15565b91506117d282611dbf565b604082019050919050565b60006117ea602583611c15565b91506117f582611e0e565b604082019050919050565b600061180d603983611c15565b915061181882611e5d565b604082019050919050565b6000611830603383611c15565b915061183b82611eac565b604082019050919050565b6000611853602e83611c15565b915061185e82611efb565b604082019050919050565b6000611876603683611c15565b915061188182611f4a565b604082019050919050565b8082525050565b61189c81611c62565b82525050565b6118ab81611c62565b82525050565b6118ba81611c62565b82525050565b6118c981611c6c565b82525050565b6118d881611c6c565b82525050565b60006118ea8284611717565b60208201915081905092915050565b60006101808201905061190f600083018761165a565b61191c60408301866115ac565b61192960c083018561165a565b6119376101008301846116b1565b95945050505050565b60006020820190506119556000830184611708565b92915050565b600060208201905081810360008301526119748161172e565b9050919050565b6000602082019050818103600083015261199481611751565b9050919050565b600060208201905081810360008301526119b481611774565b9050919050565b600060208201905081810360008301526119d481611797565b9050919050565b600060208201905081810360008301526119f4816117ba565b9050919050565b60006020820190508181036000830152611a14816117dd565b9050919050565b60006020820190508181036000830152611a3481611800565b9050919050565b60006020820190508181036000830152611a5481611823565b9050919050565b60006020820190508181036000830152611a7481611846565b9050919050565b60006020820190508181036000830152611a9481611869565b9050919050565b6000604082019050611ab0600083018561188c565b611abd60208301846118b1565b9392505050565b6000606082019050611ad9600083018661188c565b611ae660208301856118cf565b611af360408301846118b1565b949350505050565b6000602082019050611b1060008301846118a2565b92915050565b6000604082019050611b2b60008301856118a2565b611b3860208301846118a2565b9392505050565b6000602082019050611b5460008301846118c0565b92915050565b6000604082019050611b6f60008301856118c0565b611b7c60208301846118a2565b9392505050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060049050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b6000611c3182611c42565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b7f53656d6170686f7265436f72653a20796f752063616e6e6f742075736520746860008201527f652073616d65206e756c6c696669657220747769636500000000000000000000602082015250565b7f53656d6170686f726547726f7570733a2067726f757020616c7265616479206560008201527f7869737473000000000000000000000000000000000000000000000000000000602082015250565b7f53656d6170686f7265566f74696e673a20706f6c6c206973206e6f74206f6e6760008201527f6f696e6700000000000000000000000000000000000000000000000000000000602082015250565b7f53656d6170686f7265566f74696e673a2064657074682076616c75652069732060008201527f6e6f7420737570706f7274656400000000000000000000000000000000000000602082015250565b7f53656d6170686f7265566f74696e673a20766f746572732063616e206f6e6c7960008201527f206265206164646564206265666f726520766f74696e67000000000000000000602082015250565b7f53656d6170686f726547726f7570733a2067726f757020646f6573206e6f742060008201527f6578697374000000000000000000000000000000000000000000000000000000602082015250565b7f53656d6170686f7265566f74696e673a20766f74652063616e206f6e6c79206260008201527f65206361737420696e20616e206f6e676f696e6720706f6c6c00000000000000602082015250565b7f53656d6170686f7265566f74696e673a2063616c6c6572206973206e6f74207460008201527f686520706f6c6c20636f6f7264696e61746f7200000000000000000000000000602082015250565b7f53656d6170686f7265566f74696e673a20706f6c6c2068617320616c7265616460008201527f79206265656e2073746172746564000000000000000000000000000000000000602082015250565b7f53656d6170686f726547726f7570733a2067726f7570206964206d757374206260008201527f65203c20534e41524b5f5343414c41525f4649454c4400000000000000000000602082015250565b611fa281611c26565b8114611fad57600080fd5b50565b611fb981611c38565b8114611fc457600080fd5b50565b611fd081611c62565b8114611fdb57600080fd5b50565b611fe781611c6c565b8114611ff257600080fd5b5056fea2646970667358221220aa1415203119ce0f0ef713979f46703e03db21179e33d6abd68633f635978e9164736f6c63430008040033";

type SemaphoreVotingConstructorParams =
  | [linkLibraryAddresses: SemaphoreVotingLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SemaphoreVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SemaphoreVoting__factory extends ContractFactory {
  constructor(...args: SemaphoreVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SemaphoreVoting__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "SemaphoreVoting";
  }

  static linkBytecode(
    linkLibraryAddresses: SemaphoreVotingLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$4c0484323457fe1a856f46a4759b553fe4\\$__", "g"),
      linkLibraryAddresses[
        "@zk-kit/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol:IncrementalBinaryTree"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    depths: BigNumberish[],
    verifierAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SemaphoreVoting> {
    return super.deploy(
      depths,
      verifierAddresses,
      overrides || {}
    ) as Promise<SemaphoreVoting>;
  }
  getDeployTransaction(
    depths: BigNumberish[],
    verifierAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      depths,
      verifierAddresses,
      overrides || {}
    );
  }
  attach(address: string): SemaphoreVoting {
    return super.attach(address) as SemaphoreVoting;
  }
  connect(signer: Signer): SemaphoreVoting__factory {
    return super.connect(signer) as SemaphoreVoting__factory;
  }
  static readonly contractName: "SemaphoreVoting";
  public readonly contractName: "SemaphoreVoting";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SemaphoreVotingInterface {
    return new utils.Interface(_abi) as SemaphoreVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SemaphoreVoting {
    return new Contract(address, _abi, signerOrProvider) as SemaphoreVoting;
  }
}

export interface SemaphoreVotingLibraryAddresses {
  ["@zk-kit/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol:IncrementalBinaryTree"]: string;
}
